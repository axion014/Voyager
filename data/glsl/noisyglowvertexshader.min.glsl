module.exports="vec3 mod289(vec3 x){return x-(floor(x*(1.0/289.0))*289.0);}vec4 mod289(vec4 x){return x-(floor(x*(1.0/289.0))*289.0);}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-(0.85373472095314*r);}vec3 fade(vec3 t){return ((t*t)*t)*((t*((t*6.0)-15.0))+10.0);}float pnoise(vec3 P,vec3 rep){vec3 Pi0=mod(floor(P),rep);vec3 Pi1=mod(Pi0+vec3(1.0),rep);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ixy=permute(permute(vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x))+vec4(Pi0.yy,Pi1.yy));vec4 ixy0=permute(ixy+Pi0.zzzz);vec4 ixy1=permute(ixy+Pi1.zzzz);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=(vec4(0.5)-abs(gx0))-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=(sz0*(step(0.0,gx0)-0.5));gy0-=(sz0*(step(0.0,gy0)-0.5));vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=(vec4(0.5)-abs(gx1))-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=(sz1*(step(0.0,gx1)-0.5));gy1-=(sz1*(step(0.0,gy1)-0.5));vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}uniform float random;uniform float c;uniform float p;varying float intensity;mat4 inverse(mat4 m){float a00=(m[0])[0],a01=(m[0])[1],a02=(m[0])[2],a03=(m[0])[3],a10=(m[1])[0],a11=(m[1])[1],a12=(m[1])[2],a13=(m[1])[3],a20=(m[2])[0],a21=(m[2])[1],a22=(m[2])[2],a23=(m[2])[3],a30=(m[3])[0],a31=(m[3])[1],a32=(m[3])[2],a33=(m[3])[3],b00=(a00*a11)-(a01*a10),b01=(a00*a12)-(a02*a10),b02=(a00*a13)-(a03*a10),b03=(a01*a12)-(a02*a11),b04=(a01*a13)-(a03*a11),b05=(a02*a13)-(a03*a12),b06=(a20*a31)-(a21*a30),b07=(a20*a32)-(a22*a30),b08=(a20*a33)-(a23*a30),b09=(a21*a32)-(a22*a31),b10=(a21*a33)-(a23*a31),b11=(a22*a33)-(a23*a32),det=(((((b00*b11)-(b01*b10))+(b02*b09))+(b03*b08))-(b04*b07))+(b05*b06);return mat4(((a11*b11)-(a12*b10))+(a13*b09),((a02*b10)-(a01*b11))-(a03*b09),((a31*b05)-(a32*b04))+(a33*b03),((a22*b04)-(a21*b05))-(a23*b03),((a12*b08)-(a10*b11))-(a13*b07),((a00*b11)-(a02*b08))+(a03*b07),((a32*b02)-(a30*b05))-(a33*b01),((a20*b05)-(a22*b02))+(a23*b01),((a10*b10)-(a11*b08))+(a13*b06),((a01*b08)-(a00*b10))-(a03*b06),((a30*b04)-(a31*b02))+(a33*b00),((a21*b02)-(a20*b04))-(a23*b00),((a11*b07)-(a10*b09))-(a12*b06),((a00*b09)-(a01*b07))+(a02*b06),((a31*b01)-(a30*b03))-(a32*b00),((a20*b03)-(a21*b01))+(a22*b00))/det;}float turbulence(vec3 p){float w=100.0;float t=-.5;for(float f=1.0;f<=10.0;f++){float power=pow(2.0,f);t+=abs(pnoise(vec3(power*p),vec3(10.0,10.0,10.0))/power);}return t;}void main(){float noise=-turbulence((.5*normal)+random);float b=5.0*pnoise((0.05*position)+vec3(2.0*random),vec3(100.0));float displacement=(-noise+b)*12.0;intensity=pow(c-dot(normalize(normal),normalize((inverse(modelMatrix)*vec4(cameraPosition-position,1.0)).xyz)),p);gl_Position=(projectionMatrix*modelViewMatrix)*vec4(position+(normal*displacement),5.0);}";